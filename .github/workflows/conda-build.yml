name: Conda Build and Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Miniconda
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.9

      # Step 3: Create Build Environment
      - name: Create Build Environment
        run: |
          conda create -n build-env -y python=3.9 conda-build anaconda-client pip
          conda clean --all -y  # Clean up Conda environment to avoid conflicts

      # Step 4: Build the Conda Package
      - name: Build Conda Package
        run: |
          conda run -n build-env conda-build conda-recipe --channel conda-forge --no-cache-dir
          # Dynamically find the path to the built .tar.bz2 package
          PACKAGE_PATH=$(find /usr/share/miniconda/conda-bld/ -name "*.tar.bz2")
          echo "PACKAGE_PATH=$PACKAGE_PATH" >> $GITHUB_ENV

      # Step 5: Upload the Conda Package
      - name: Upload Conda Package
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          conda run -n build-env anaconda login --token $ANACONDA_API_TOKEN
          conda run -n build-env anaconda upload ${{ env.PACKAGE_PATH }} --force

      # Step 6: Install Twine for PyPI
      - name: Install Twine
        run: conda run -n build-env pip install twine

      # Step 7: Publish to PyPI
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          conda run -n build-env python setup.py sdist bdist_wheel
          conda run -n build-env twine upload dist/*
